{"version":3,"sources":["webpack:///dist.min.js","webpack:///webpack/bootstrap c0ac07738624d96b9cfd","webpack:///./~/chronos-pattern/src/Chronos.js","webpack:///./src/index.js","webpack:///./~/chronos-pattern/src/TimeAccelerator.js","webpack:///./~/chronos-pattern/src/TopChronos.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","Chronos","opt_updating","this","_init","setUpdating","listeners","timeRunning","registerListener","listener","push","prependListener","unshift","removeListener","length","splice","update","deltaTime","updating","dummyUpdate","NotImplementedException","__WEBPACK_IMPORTED_MODULE_0__src_Chronos_js__","__WEBPACK_IMPORTED_MODULE_1__src_TimeAccelerator_js__","__WEBPACK_IMPORTED_MODULE_2__src_TopChronos_js__","_chronosPattern","console","log","TimeAccelerator","__WEBPACK_IMPORTED_MODULE_0__Chronos_js__","assign","timeMod","setTimeMod","modificator","_startTime","_updateWrapper","timestamp","_lastTime","_lockId","window","requestAnimationFrame","bind","start","performance","now","stop","cancelAnimationFrame"],"mappings":"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","file":"dist.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Chronos; });\n/**\r\n * Basic Chronos mediator node object.\r\n * Can be chained into node list. \r\n * \r\n * @constructor\r\n * @param {Boolean} [opt_updating] - if false, node will not update node childs by default\r\n */\r\nvar Chronos = function (opt_updating) {\r\n    this._init();\r\n    if (opt_updating === false)\r\n        this.setUpdating(opt_updating);\r\n};\r\n\r\nChronos.prototype = {\r\n    /**\r\n     * Initalizes array of nodes etc. \r\n     * \r\n     * @private\r\n     */\r\n    _init: function () {\r\n        this.listeners = [];\r\n        this.timeRunning = 0;\r\n    },\r\n    /**\r\n     * Registers object that is being updated with each update loop. \r\n     * Object is appended, previously registered objects are updated first.\r\n     * \r\n     * @param {Updateable|Object} listener - Object must implement method update\r\n     */\r\n    registerListener: function (listener) {\r\n        this.listeners.push(listener);\r\n    },\r\n    /**\r\n     * Registers object that is being updated with each update loop. \r\n     * Object is prepended and is updated before all other previously registered objects.\r\n     * \r\n     * @param {Updateable|Object} listener - Object must implement method update\r\n     */\r\n    prependListener: function (listener) {\r\n        this.listeners.unshift(listener);\r\n    },\r\n    /**\r\n     * Removes updating of previously registered object. \r\n     * \r\n     * @param {Updateable|Object} listener - Object must implement method update\r\n     * @returns {Object|null} - returns null if listener were not registered or listener that were removed\r\n     */\r\n    removeListener: function (listener) {\r\n        var i;\r\n\r\n        for (i = 0; i < this.listeners.length; i++) {\r\n            if (listener === this.listeners[i]) {\r\n                this.listeners.splice(i);\r\n                return listener;\r\n            }\r\n        }\r\n        return null;\r\n    },\r\n    /**\r\n     * Updates all child nodes and notifies them about delta time .\r\n     * \r\n     * @param {Number} deltaTime - time difference from last update\r\n     */\r\n    update: function (deltaTime) {\r\n        var i;\r\n        this.timeRunning += deltaTime;\r\n\r\n        for (i = 0; i < this.listeners.length; i++)\r\n            this.listeners[i].update(deltaTime);\r\n    },\r\n    /**\r\n     * Sets if child nodes should be updated if update is \r\n     * called on this object or not. \r\n     * \r\n     * @param {Boolean} updating - false for stop updating nodes\r\n     */\r\n    setUpdating: function (updating) {\r\n        if (updating) {\r\n            delete this.update;\r\n        } else {\r\n            this.update = dummyUpdate;\r\n        }\r\n    }\r\n};\r\n\r\nvar dummyUpdate = function () { };\r\n\r\n\r\n/**\r\n * ===============================\r\n * Just for documentation purposes\r\n * ===============================\r\n */\r\n\r\nvar NotImplementedException = function () { };\r\n\r\n/**\r\n * Just for documentation purposes. \r\n * \r\n * @interface\r\n */\r\nvar Updateable = function () { };\r\n\r\nUpdateable.prototype = {\r\n    update: function () {\r\n        throw new NotImplementedException();\r\n    }\r\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_Chronos_js__ = __webpack_require__(0);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Chronos\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_Chronos_js__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_TimeAccelerator_js__ = __webpack_require__(3);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"TimeAccelerator\", function() { return __WEBPACK_IMPORTED_MODULE_1__src_TimeAccelerator_js__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_TopChronos_js__ = __webpack_require__(4);\n/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_2__src_TopChronos_js__, \"TopChronos\")) __webpack_require__.d(__webpack_exports__, \"TopChronos\", function() { return __WEBPACK_IMPORTED_MODULE_2__src_TopChronos_js__[\"TopChronos\"]; });\n\r\n\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _chronosPattern = __webpack_require__(1);\n\nvar c = new _chronosPattern.Chronos();\n\nconsole.log(c);\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return TimeAccelerator; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Chronos_js__ = __webpack_require__(0);\n\r\n\r\n/**\r\n * Chronos mediator node object.\r\n * Can be chained into node list. \r\n * Can speedup time or make slow-mo effect. \r\n * \r\n * @constructor\r\n * @extends Chronos\r\n * @param {Boolean} [opt_updating] - if false, node will not update node childs by default\r\n */\r\nvar TimeAccelerator = function (opt_updating) {\r\n    __WEBPACK_IMPORTED_MODULE_0__Chronos_js__[\"a\" /* Chronos */].call(this, opt_updating);\r\n};\r\n\r\nTimeAccelerator.prototype = Object.assign({}, __WEBPACK_IMPORTED_MODULE_0__Chronos_js__[\"a\" /* Chronos */].prototype, {\r\n    _init: function () {\r\n        __WEBPACK_IMPORTED_MODULE_0__Chronos_js__[\"a\" /* Chronos */].prototype._init.call(this);\r\n        this.timeMod = 1;\r\n    },\r\n    /**\r\n     * Change the speed of time for all child nodes\r\n     * \r\n     * @param {Number} modificator - \r\n     * value = 1, normal time mode\r\n     * value > 1, faster\r\n     * value < 1, slower\r\n     * value = -1, reverse\r\n     * ...\r\n     */\r\n    setTimeMod: function (modificator) {\r\n        this.timeMod = modificator;\r\n    },\r\n    update: function (deltaTime) {\r\n        deltaTime = deltaTime * this.timeMod;\r\n        __WEBPACK_IMPORTED_MODULE_0__Chronos_js__[\"a\" /* Chronos */].prototype.update.call(this, deltaTime);\r\n    }\r\n});\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Chronos_js__ = __webpack_require__(0);\n\r\n\r\n/**\r\n * Root node for frontend javascript. \r\n * Is based on requestAnimationFrame, so it updates at least every 16.7ms or more often. \r\n * \r\n * @constructor\r\n * @extends Chronos\r\n * @param {Boolean} [opt_updating] - if false, node will not update node childs by default\r\n */\r\nvar TopChronos = function () {\r\n    __WEBPACK_IMPORTED_MODULE_0__Chronos_js__[\"a\" /* Chronos */].call(this);\r\n};\r\n\r\nTopChronos.prototype = Object.assign({}, __WEBPACK_IMPORTED_MODULE_0__Chronos_js__[\"a\" /* Chronos */].prototype, {\r\n    _init: function () {\r\n        __WEBPACK_IMPORTED_MODULE_0__Chronos_js__[\"a\" /* Chronos */].prototype._init.call(this);\r\n        this._startTime = 0;\r\n    },\r\n    /**\r\n     * sets times for updating method\r\n     * \r\n     * @private\r\n     * @param {Number} timestamp - window.requestAnimationFrame specific\r\n     */\r\n    _updateWrapper: function (timestamp) {\r\n        var deltaTime;\r\n\r\n        deltaTime = timestamp - this._lastTime;\r\n        this._lastTime = timestamp;\r\n\r\n        this.update(deltaTime); // start standart \r\n        this._lockId = window.requestAnimationFrame(this._updateWrapper.bind(this));\r\n    },\r\n    /**\r\n     * starts updating tree based on requestAnimationFrame\r\n     */\r\n    start: function () {\r\n        this._lastTime = performance.now();\r\n        this._lockId = window.requestAnimationFrame(this._updateWrapper.bind(this));\r\n    },\r\n    /**\r\n     * stops updating tree\r\n     */\r\n    stop: function () {\r\n        if (!this._lockId)\r\n            return;\r\n\r\n        window.cancelAnimationFrame(this._lockId);\r\n        delete this._lockId;\r\n    }\r\n});\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// dist.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c0ac07738624d96b9cfd","/**\r\n * Basic Chronos mediator node object.\r\n * Can be chained into node list. \r\n * \r\n * @constructor\r\n * @param {Boolean} [opt_updating] - if false, node will not update node childs by default\r\n */\r\nexport var Chronos = function (opt_updating) {\r\n    this._init();\r\n    if (opt_updating === false)\r\n        this.setUpdating(opt_updating);\r\n};\r\n\r\nChronos.prototype = {\r\n    /**\r\n     * Initalizes array of nodes etc. \r\n     * \r\n     * @private\r\n     */\r\n    _init: function () {\r\n        this.listeners = [];\r\n        this.timeRunning = 0;\r\n    },\r\n    /**\r\n     * Registers object that is being updated with each update loop. \r\n     * Object is appended, previously registered objects are updated first.\r\n     * \r\n     * @param {Updateable|Object} listener - Object must implement method update\r\n     */\r\n    registerListener: function (listener) {\r\n        this.listeners.push(listener);\r\n    },\r\n    /**\r\n     * Registers object that is being updated with each update loop. \r\n     * Object is prepended and is updated before all other previously registered objects.\r\n     * \r\n     * @param {Updateable|Object} listener - Object must implement method update\r\n     */\r\n    prependListener: function (listener) {\r\n        this.listeners.unshift(listener);\r\n    },\r\n    /**\r\n     * Removes updating of previously registered object. \r\n     * \r\n     * @param {Updateable|Object} listener - Object must implement method update\r\n     * @returns {Object|null} - returns null if listener were not registered or listener that were removed\r\n     */\r\n    removeListener: function (listener) {\r\n        var i;\r\n\r\n        for (i = 0; i < this.listeners.length; i++) {\r\n            if (listener === this.listeners[i]) {\r\n                this.listeners.splice(i);\r\n                return listener;\r\n            }\r\n        }\r\n        return null;\r\n    },\r\n    /**\r\n     * Updates all child nodes and notifies them about delta time .\r\n     * \r\n     * @param {Number} deltaTime - time difference from last update\r\n     */\r\n    update: function (deltaTime) {\r\n        var i;\r\n        this.timeRunning += deltaTime;\r\n\r\n        for (i = 0; i < this.listeners.length; i++)\r\n            this.listeners[i].update(deltaTime);\r\n    },\r\n    /**\r\n     * Sets if child nodes should be updated if update is \r\n     * called on this object or not. \r\n     * \r\n     * @param {Boolean} updating - false for stop updating nodes\r\n     */\r\n    setUpdating: function (updating) {\r\n        if (updating) {\r\n            delete this.update;\r\n        } else {\r\n            this.update = dummyUpdate;\r\n        }\r\n    }\r\n};\r\n\r\nvar dummyUpdate = function () { };\r\n\r\n\r\n/**\r\n * ===============================\r\n * Just for documentation purposes\r\n * ===============================\r\n */\r\n\r\nvar NotImplementedException = function () { };\r\n\r\n/**\r\n * Just for documentation purposes. \r\n * \r\n * @interface\r\n */\r\nvar Updateable = function () { };\r\n\r\nUpdateable.prototype = {\r\n    update: function () {\r\n        throw new NotImplementedException();\r\n    }\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chronos-pattern/src/Chronos.js\n// module id = 0\n// module chunks = 0","import { Chronos } from \"chronos-pattern\"\r\n\r\nvar c = new Chronos()\r\n\r\nconsole.log(c)\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import { Chronos } from \"./Chronos.js\"\r\n\r\n/**\r\n * Chronos mediator node object.\r\n * Can be chained into node list. \r\n * Can speedup time or make slow-mo effect. \r\n * \r\n * @constructor\r\n * @extends Chronos\r\n * @param {Boolean} [opt_updating] - if false, node will not update node childs by default\r\n */\r\nexport var TimeAccelerator = function (opt_updating) {\r\n    Chronos.call(this, opt_updating);\r\n};\r\n\r\nTimeAccelerator.prototype = Object.assign({}, Chronos.prototype, {\r\n    _init: function () {\r\n        Chronos.prototype._init.call(this);\r\n        this.timeMod = 1;\r\n    },\r\n    /**\r\n     * Change the speed of time for all child nodes\r\n     * \r\n     * @param {Number} modificator - \r\n     * value = 1, normal time mode\r\n     * value > 1, faster\r\n     * value < 1, slower\r\n     * value = -1, reverse\r\n     * ...\r\n     */\r\n    setTimeMod: function (modificator) {\r\n        this.timeMod = modificator;\r\n    },\r\n    update: function (deltaTime) {\r\n        deltaTime = deltaTime * this.timeMod;\r\n        Chronos.prototype.update.call(this, deltaTime);\r\n    }\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chronos-pattern/src/TimeAccelerator.js\n// module id = 3\n// module chunks = 0","import { Chronos } from \"./Chronos.js\"\r\n\r\n/**\r\n * Root node for frontend javascript. \r\n * Is based on requestAnimationFrame, so it updates at least every 16.7ms or more often. \r\n * \r\n * @constructor\r\n * @extends Chronos\r\n * @param {Boolean} [opt_updating] - if false, node will not update node childs by default\r\n */\r\nvar TopChronos = function () {\r\n    Chronos.call(this);\r\n};\r\n\r\nTopChronos.prototype = Object.assign({}, Chronos.prototype, {\r\n    _init: function () {\r\n        Chronos.prototype._init.call(this);\r\n        this._startTime = 0;\r\n    },\r\n    /**\r\n     * sets times for updating method\r\n     * \r\n     * @private\r\n     * @param {Number} timestamp - window.requestAnimationFrame specific\r\n     */\r\n    _updateWrapper: function (timestamp) {\r\n        var deltaTime;\r\n\r\n        deltaTime = timestamp - this._lastTime;\r\n        this._lastTime = timestamp;\r\n\r\n        this.update(deltaTime); // start standart \r\n        this._lockId = window.requestAnimationFrame(this._updateWrapper.bind(this));\r\n    },\r\n    /**\r\n     * starts updating tree based on requestAnimationFrame\r\n     */\r\n    start: function () {\r\n        this._lastTime = performance.now();\r\n        this._lockId = window.requestAnimationFrame(this._updateWrapper.bind(this));\r\n    },\r\n    /**\r\n     * stops updating tree\r\n     */\r\n    stop: function () {\r\n        if (!this._lockId)\r\n            return;\r\n\r\n        window.cancelAnimationFrame(this._lockId);\r\n        delete this._lockId;\r\n    }\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chronos-pattern/src/TopChronos.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}